configfile: "./config.yaml"

all_cancers = ' '.join(config['cancers'])
joined_cancers = '_'.join(config['cancers'])
amount_of_summed_embeddings = config['amount_of_summed_embeddings']
multi_cancer_max_walk = config['multi_cancer_max_walk']
simple_cancer_max_walk = config['simple_cancer_max_walk']
max_run_iterations = config['run_iterations']
noise_ratios = config['noise_ratios']

rule all:
     input:
        expand(
            f"results/recognizer/summed_embeddings/multi/{{cancers}}/{{amount}}/{{noise_ratio}}/{{i}}_embeddings.h5",
            i=range(3, multi_cancer_max_walk + 1),
            cancers=joined_cancers,
            amount=amount_of_summed_embeddings,
            noise_ratio=noise_ratios
        ),
        expand(
            f"results/recognizer/summed_embeddings/multi/{{cancers}}/{{amount}}/0.0/combined_embeddings.h5",
            cancers=joined_cancers,
            amount=amount_of_summed_embeddings,
        )


rule create_multi_sum_embeddings:
     input:
        expand(
            f"results/embeddings/{{cancers}}.h5",
            cancers=joined_cancers
        )
     output:
        expand(
            f"results/recognizer/summed_embeddings/multi/{{cancers}}/{{amount}}/{{noise_ratio}}/{{i}}_embeddings.h5",
            i=range(3, multi_cancer_max_walk + 1),
            cancers=joined_cancers,
            amount=amount_of_summed_embeddings,
            noise_ratio=noise_ratios
        )

     run:
        # Set the values from config
        amount = amount_of_summed_embeddings
        cancers = all_cancers

        # Python loop for control
        for walk_distance in range(3, multi_cancer_max_walk + 1):
            for noise_ratio in noise_ratios:
                shell(f"python3 src/recognizer/summed_embeddings_generation/1_02_create_multi_cancer_sum_embeddings.py -a {amount} -w {walk_distance} -c {cancers} -n {noise_ratio}")


rule create_multi_combined_embeddings:
    input:
        expand(
            f"results/recognizer/summed_embeddings/multi/{{cancers}}/{{amount}}/0.0/{{i}}_embeddings.h5",
            i=range(3, multi_cancer_max_walk + 1),
            cancers=joined_cancers,
            amount=amount_of_summed_embeddings
        )
    output:
        expand(
            f"results/recognizer/summed_embeddings/multi/{{cancers}}/{{amount}}/0.0/combined_embeddings.h5",
            amount=amount_of_summed_embeddings,
            cancers=joined_cancers
        )

    run:
        amount=amount_of_summed_embeddings
        cancers=all_cancers
        shell(f"python3 src/recognizer/summed_embeddings_generation/combine_summed_embeddings.py -a {{amount}} -n 0.0 -c {{cancers}}")